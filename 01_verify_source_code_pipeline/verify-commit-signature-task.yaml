apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: verify-commit-signature-task
spec:
  params:
    # INCLUDE https://tuf.apps.open-svc-sts.k1wl.p1.openshiftapps.com/targets/fulcio_v1.crt.pem
    - name: fulcio-url
      type: string
    - name: rekor-url
      type: string
    - name: issuer-url
      type: string 
    - name: tuff-mirror
      type: string
    - name: tuff-root
      type: string
    - name: rekor-public-key
      type: string
    - name: commit-author-email
      type: string
    - name: commit-date
      type: string
  results:
    - name: log-file
      description: produce the log file as a task result
  steps:
  - name: search-rekor
    image: registry.redhat.io/rhel8/go-toolset@sha256:e059e813125f3beee236b0499cfae8d68716d925cffda327e4a09b465832960b
    workingDir: /workspace
    script: |
      go version
      go install -v github.com/sigstore/rekor/cmd/rekor-cli@latest
      go install github.com/itchyny/gojq/cmd/gojq@latest
      go install github.com/sigstore/gitsign@latest
      curl https://github.com/sigstore/cosign/releases/download/v2.2.0/cosign-linux-amd64 > /workspace/cosign
      chmod +x /workspace/cosign
      
      set -x 
      alias rekor-cli=/opt/app-root/src/go/bin/rekor-cli
      alias jq=/opt/app-root/src/go/bin/gojq
      alias cosign=/workspace/cosign
      alias gitsign=/opt/app-root/src/go/bin/gitsign

      cosign version
      cosign initialize --mirror=$(params.tuff-mirror) --root=$(params.tuff-root) -d
      ls -al /opt/app-root/src
      

      cd /workspace/repository/
      uuids=$(rekor-cli search --rekor_server=$(params.rekor-url) --email=$(params.commit-author-email))
      git config --global --add safe.directory /workspace/repository
      IFS=$'\n'
      uuids_array=()
      while read -r line; do
        uuids_array+=("$line")
      done <<< "$uuids"
      unset IFS

      echo "log entry count:" ${#uuids_array[@]}

      if [[ ${#uuids_array[@]} -eq 0 ]]; then
        echo "Could not find any entries in the speicifed rekor instance signed with same email as the author of these commits."
        echo "Please verify these details are correct and retry: "
        echo "\t rekor-server: $(params.rekor-url)"
        echo "\t commit-author-email: $(params.commit-author-email)"  
        exit 1;
      else
        commit_date=$(date -d '$(params.commit-date)' +"%s")
        mkdir /workspace/entries
        rekor_entries=()
        for uuid in "${uuids_array[@]}"; do
          rekor_entry=$(rekor-cli get --rekor_server=$(params.rekor-url) --uuid=$uuid --format=json)
          rekor_entries+=($rekor_entry)
        done;
        
        correct_rekor_entry=""
        for entry in "${rekor_entries[@]}"; do
          entryIntegratedTime=$(echo $entry | jq .IntegratedTime)
          if [[ $commit_date -gt $entryIntegratedTime ]]; then
            timeDiff=$((commit_date - entryIntegratedTime))
          elif [[ $entryIntegratedTime -gt $commit_date ]]; then
            timeDiff=$((entryIntegratedTime - commit_date))
          fi

          if [[ $timeDiff -lt 600000 ]]; then #adjust this to 300
            correct_rekor_entry=$(echo $entry | jq .UUID)
          fi
        done;
        
        echo $correct_rekor_entry
        if [[ -n $correct_rekor_entry ]]; then
          export GITSIGN_FULCIO_ROOT="$HOME/.sigstore/root/targets/fulcio_v1.crt.pem"
          export SIGSTORE_REKOR_PUBLIC_KEY="$(params.rekor-public-key)"
          export GITSIGN_FULCIO_URL="$(params.fulcio-url)"
          export GITSIGN_OIDC_ISSUER="$(params.issuer-url)"
          export GITSIGN_REKOR_URL="$(params.rekor-url)"
          git config --local --add gpg.program gpg
          git config --local --add gpg.format x509
          git config --local --add gpg.x509.program gitsign
          git config --local --add commit.gpgsign true
          git config --local --add gitsign.rekor $(params.rekor-url)
          git config --local --add gitsign.fulcio $(params.fulcio-url)
          git config --local --add gitsign.issuer $(params.issuer-url)
          git log --name-status HEAD^..HEAD
          gitsign verify --certificate-identity=$(params.commit-author-email) --certificate-oidc-issuer=$(params.issuer-url) HEAD
        else
          echo "could not find a rekor entry within within 5 minutes of the commit date. Potential issues: redelivery of webhook event, event listener failed to start pipeline, etc."
          exit 1
        fi
      fi
  workspaces:
  - name: repository
  - name: secrets
